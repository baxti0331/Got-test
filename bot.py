import logging
import os
import wikipedia
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, filters

logging.basicConfig(level=logging.INFO)

wikipedia.set_lang("ru")

MAX_QUERY_LENGTH = 100

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –í–∏–∫–∏–ø–µ–¥–∏—è-–±–æ—Ç.\n"
        "–ù–∞–ø–∏—à–∏ –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ —Å–ª–æ–≤–æ, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏."
    )

async def answer_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.message.text.strip()

    if not query:
        await update.message.reply_text("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –Ω–µ–ø—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å.")
        return

    if len(query) > MAX_QUERY_LENGTH:
        await update.message.reply_text(
            f"‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –±–æ–ª–µ–µ {MAX_QUERY_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤."
        )
        return

    try:
        summary = wikipedia.summary(query, sentences=3)
        page = wikipedia.page(query)
        url = page.url

        text = f"üìö –í–æ—Ç —á—Ç–æ —è –Ω–∞—à—ë–ª –¥–ª—è —Ç–µ–±—è:\n\n{summary}\n\n–ù–∞–¥–µ—é—Å—å, —ç—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–º–æ–∂–µ—Ç! üòä"

        keyboard = InlineKeyboardMarkup(
            [[InlineKeyboardButton("–ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ –í–∏–∫–∏–ø–µ–¥–∏–∏", url=url)]]
        )

        await update.message.reply_text(text, reply_markup=keyboard)

    except wikipedia.exceptions.DisambiguationError as e:
        options = e.options[:5]
        opts_text = "\n".join(f"- {opt}" for opt in options)
        await update.message.reply_text(
            f"ü§î –¢–≤–æ–π –∑–∞–ø—Ä–æ—Å —Å–ª–∏—à–∫–æ–º –æ–±—â–∏–π, —É—Ç–æ—á–Ω–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–¥–Ω—É –∏–∑ —Ç–µ–º:\n{opts_text}"
        )
    except wikipedia.exceptions.PageError:
        await update.message.reply_text(
            "üòû –ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –Ω–∞—à—ë–ª —Å—Ç–∞—Ç—å—é –ø–æ —Ç–≤–æ–µ–º—É –∑–∞–ø—Ä–æ—Å—É. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å."
        )
    except Exception:
        await update.message.reply_text(
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."
        )


if __name__ == "__main__":
    TOKEN = os.getenv("TELEGRAM_TOKEN")
    PORT = int(os.getenv("PORT", "8443"))  # Render –¥–∞—ë—Ç –ø–æ—Ä—Ç –≤ env

    if not TOKEN:
        raise ValueError("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç TELEGRAM_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, answer_question))

    # –í–µ–±—Ö—É–∫ URL Telegram –±—É–¥–µ—Ç –∂–¥–∞—Ç—å –ø–æ –ø—É—Ç–∏ /<TOKEN>
    WEBHOOK_PATH = f"/{TOKEN}"
    WEBHOOK_URL = f"https://{os.getenv('RENDER_EXTERNAL_HOSTNAME')}{WEBHOOK_PATH}"

    print(f"Setting webhook to {WEBHOOK_URL}")

    app.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        url_path=TOKEN,
        webhook_url=WEBHOOK_URL
    )